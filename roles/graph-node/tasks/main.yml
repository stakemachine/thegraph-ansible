---
# tasks file for graph-node

- name: Pull graph-node Docker image
  docker_image:
    name: "{{ graph_node_image }}"
    source: pull

- name: Create network if doesn't exist
  docker_network: 
    name: "{{ graph_node_network }}"
    state: present
       
- name: Start graph-node container
  vars:
    ip_address: "{{ ansible_wg0.ipv4.address if ansible_wg0 is defined else '127.0.0.1'}}"
  docker_container:
    name: "{{ graph_node_name }}"
    image: "{{ graph_node_image }}"
    state: started
    restart_policy: unless-stopped
    container_default_behavior: no_defaults
    recreate: yes
    ulimits: nofile:10000:10000
    exposed_ports:
      - '8030'
      - '8000'
      - '8001'
      - '8020'
      - '8040'
    published_ports:
      - "{{ ip_address }}:{{ graphnode_index_node_port }}:8030"
      - "{{ ip_address }}:{{ graphnode_http_port }}:8000"
      - "{{ ip_address }}:{{ graphnode_ws_port }}:8001"
      - "{{ ip_address }}:{{ graphnode_admin_port }}:8020"
      - "{{ ip_address }}:{{ graphnode_metrics_port }}:8040"
    networks:
      - name: "{{ graph_node_network }}"
    network_mode: default
    env:
      postgres_host: "{{ pg_graph_node_host }}"
      postgres_user: "{{ pg_graph_node_username }}"
      postgres_pass: "{{ pg_graph_node_password }}"
      postgres_db: "{{ pg_graph_node_database }}"
      ipfs: "{{ ipfs_endpoint }}"
      ethereum: "{{ ethereum_node_graph }}"
      node_role: "{{ graph_node_role }}"
      node_id: "{{ graph_node_id }}"
      BLOCK_INGESTOR: "{{ block_ingestor }}"
      RUST_LOG: "{{ rust_log_level }}"
      GRAPH_LOG: "{{ graph_log_level }}"
      STORE_CONNECTION_POOL_SIZE: "{{ store_connection_pool_size }}"
      EXPERIMENTAL_SUBGRAPH_VERSION_SWITCHING_MODE: "{{ experimental_subgraph_version_switching_mode }}"
      GRAPH_KILL_IF_UNRESPONSIVE: "{{ graph_kill_if_unresponsive }}"
      GRAPH_LOG_QUERY_TIMING: "{{ graph_log_query_timing }}"
      GRAPH_ETH_CALL_BY_NUMBER: "{{ graph_eth_call_by_number }}"
      ETHEREUM_RPC_MAX_PARALLEL_REQUESTS: "{{ ethereum_rpc_max_parallel_requests }}"
      AMOUNT_OF_WORKER_THREADS: "{{ graph_node_amount_of_worker_threads }}"
      ETHEREUM_BLOCK_BATCH_SIZE: "{{ graph_node_ethereum_block_batch_size }}"
      GRAPH_ETHEREUM_MAX_BLOCK_RANGE_SIZE: "{{ graph_node_ethereum_max_block_range_size }}"
      GRAPH_ETHEREUM_TARGET_TRIGGERS_PER_BLOCK_RANGE: "{{ graph_node_ethereum_target_triggers_per_block_range }}"
      ETHEREUM_TRACE_STREAM_STEP_SIZE: "{{ graph_node_ethereum_trace_stream_step_size }}"
      GRAPH_ETHEREUM_JSON_RPC_TIMEOUT: "{{ graph_node_json_rpc_timeout }}"
      GRAPH_ETHEREUM_REQUEST_RETRIES: "{{ graph_node_ethereum_request_retries }}"